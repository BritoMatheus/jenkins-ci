pipeline {
    agent any

    stages {
        
        stage ('Build') {
            steps {
                dir('src\\Jenkins.CICD\\Jenkins.CICD') {
                    bat 'dotnet build '
                }
            }
        }

        stage ('Test') {
            steps {
                dir('src\\Jenkins.CICD\\Jenkins.CICD.Test') {
                    bat 'dotnet test --collect:"XPlat Code Coverage" '
                }
            }
        }

        stage ('Sonar analysis') {
            
            environment {
                scannerHome = tool "SONAR_SCANNER"
            }

            steps {
                withSonarQubeEnv('SONAR_LOCAL') {
                    serviceName = "JenkinsCICD"
                    sonarToken = "e378f35eabd51a38ce106b64f5d4c70515b7431f"
                    exclusions = "**/ClientApp/**"

                    dir('src\\Jenkins.CICD') {
                        bat "dotnet sonarscanner begin /k:${serviceName} /d:sonar.login=${sonarToken} /d:sonar.exclusions=${exclusions} "
                        bat "dotnet build"
                        bat "dotnet sonarscanner end /d:sonar.login=${sonarToken}"
                    }
                }
            }
        }
        
        stage ('Fim') {
            steps {
                bat 'echo fim'
            }
        }
        
    }
}